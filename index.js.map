{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport const getImagesByQuery = query => {\n  axios.defaults.baseURL = 'https://pixabay.com/api/';\n  const API_KEY = '50578368-dd70245762fcec5298974d7f8';\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    q: query,\n  });\n\n  return axios.get(`?${searchParams}`).then(response => {\n    return response.data.hits;\n  });\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  gallery: document.querySelector('.gallery'),\n  loader: document.querySelector('.loader'),\n};\nconst { gallery, loader } = refs;\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  overlay: true,\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 100,\n});\n\nexport const createGallery = images => {\n  const imagesData = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<a href=\"${largeImageURL}\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\"/>        \n        <ul class=\"imagesData\">\n          <li class=\"liImageData\">\n            <h3 class=\"h3ImageData\">likes</h3>\n            <p class=\"pImageData\">${likes}</p>\n          </li>\n          <li class=\"liImageData\">\n            <h3 class=\"h3ImageData\">views</h3>\n            <p class=\"pImageData\">${views}</p>\n          </li>\n          <li class=\"liImageData\">\n            <h3 class=\"h3ImageData\">comments</h3>\n            <p class=\"pImageData\">${comments}</p>\n          </li>\n          <li class=\"liImageData\">\n            <h3 class=\"h3ImageData\">downloads</h3>\n            <p class=\"pImageData\">${downloads}</p>\n          </li>\n        </ul>\n      </a>`\n    )\n    .join('');\n  gallery.insertAdjacentHTML('beforeend', imagesData);\n  lightbox.refresh();\n};\n\nexport const clearGallery = () => {\n  gallery.innerHTML = '';\n};\n\nexport const showLoader = () => {\n  loader.classList.remove('isHiddenLoader');\n};\n\nexport const hideLoader = () => {\n  loader.classList.add('isHiddenLoader');\n};\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  /*[name=\"searchText\"] прибрать? */\n  input: document.querySelector('input'),\n  button: document.querySelector('button'),\n  form: document.querySelector('.form'),\n  gallery: document.querySelector('.gallery'),\n};\nconst { input, button, form, gallery } = refs;\n\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\n\nlet searchQuery = '';\nfunction onInput(event) {\n  // showLoader();\n  searchQuery = event.target.value;\n  !searchQuery.trim()\n    ? button.setAttribute('disabled', ' ')\n    : button.removeAttribute('disabled');\n}\ninput.addEventListener('input', onInput);\n\nfunction onFormSubmit(event) {\n  showLoader();\n  event.preventDefault();\n  const axiosImagesData = getImagesByQuery(searchQuery)\n    .then(imagesData => {\n      if (!imagesData.length) {\n        OnAxiosError();\n      }\n      clearGallery();\n      createGallery(imagesData);\n    })\n    .catch(error =>\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected ` + error,\n        position: 'topRight',\n      })\n    )\n    .finally(() => {\n      form.reset();\n      hideLoader();\n    });\n}\nform.addEventListener('submit', onFormSubmit);\n\nfunction OnAxiosError() {\n  iziToast.error({\n    message:\n      `❌ ` +\n      `Sorry, there are no images matching your search query. Please try again!`,\n    position: 'topRight',\n  });\n}\n"],"names":["getImagesByQuery","query","axios","API_KEY","searchParams","response","refs","gallery","loader","lightbox","SimpleLightbox","createGallery","images","imagesData","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","input","button","form","searchQuery","onInput","event","onFormSubmit","OnAxiosError","error","iziToast"],"mappings":"owBAEO,MAAMA,EAAmBC,GAAS,CACvCC,EAAM,SAAS,QAAU,2BACzB,MAAMC,EAAU,qCACVC,EAAe,IAAI,gBAAgB,CACvC,IAAKD,EACL,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,EAAGF,CACP,CAAG,EAED,OAAOC,EAAM,IAAI,IAAIE,CAAY,EAAE,EAAE,KAAKC,GACjCA,EAAS,KAAK,IACtB,CACH,ECbMC,EAAO,CACX,QAAS,SAAS,cAAc,UAAU,EAC1C,OAAQ,SAAS,cAAc,SAAS,CAC1C,EACM,SAAEC,EAAS,OAAAC,CAAQ,EAAGF,EAEtBG,EAAW,IAAIC,EAAe,aAAc,CAChD,QAAS,GACT,aAAc,MACd,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAEYC,EAAgBC,GAAU,CACrC,MAAMC,EAAaD,EAChB,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC,YAAYL,CAAa;AAAA,oBACbD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,oCAIVC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,oCAIRC,CAAS;AAAA;AAAA;AAAA,WAIxC,EACA,KAAK,EAAE,EACVb,EAAQ,mBAAmB,YAAaM,CAAU,EAClDJ,EAAS,QAAO,CAClB,EAEaY,EAAe,IAAM,CAChCd,EAAQ,UAAY,EACtB,EAEae,EAAa,IAAM,CAC9Bd,EAAO,UAAU,OAAO,gBAAgB,CAC1C,EAEae,EAAa,IAAM,CAC9Bf,EAAO,UAAU,IAAI,gBAAgB,CACvC,EC9DMF,EAAO,CAEX,MAAO,SAAS,cAAc,OAAO,EACrC,OAAQ,SAAS,cAAc,QAAQ,EACvC,KAAM,SAAS,cAAc,OAAO,EACpC,QAAS,SAAS,cAAc,UAAU,CAC5C,EACM,CAAE,MAAAkB,EAAO,OAAAC,EAAQ,KAAAC,EAAM,QAAAnB,CAAO,EAAKD,EAUzC,IAAIqB,EAAc,GAClB,SAASC,EAAQC,EAAO,CAEtBF,EAAcE,EAAM,OAAO,MAC1BF,EAAY,KAAM,EAEfF,EAAO,gBAAgB,UAAU,EADjCA,EAAO,aAAa,WAAY,GAAG,CAEzC,CACAD,EAAM,iBAAiB,QAASI,CAAO,EAEvC,SAASE,EAAaD,EAAO,CAC3BP,IACAO,EAAM,eAAc,EACI7B,EAAiB2B,CAAW,EACjD,KAAKd,GAAc,CACbA,EAAW,QACdkB,IAEFV,IACAV,EAAcE,CAAU,CAC9B,CAAK,EACA,MAAMmB,GACLC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,cAAgBD,EACzB,SAAU,UAClB,CAAO,CACF,EACA,QAAQ,IAAM,CACbN,EAAK,MAAK,EACVH,GACN,CAAK,CACL,CACAG,EAAK,iBAAiB,SAAUI,CAAY,EAE5C,SAASC,GAAe,CACtBE,EAAS,MAAM,CACb,QACE,6EAEF,SAAU,UACd,CAAG,CACH"}